// plugins/ai-gemini.js

// ‡∂î‡∂∫‡∑è‡∂ú‡∑ô command.js (‡∑Ñ‡∑ù command handler) ‡∑Ü‡∂∫‡∑í‡∂Ω‡∑ä ‡∂ë‡∂ö ‡∂≠‡∑í‡∂∫‡∑ô‡∂± ‡∂≠‡∑ê‡∂±‡∂ß path ‡∂ë‡∂ö ‡∑Ñ‡∂ª‡∑í‡∂ú‡∑É‡∑ä‡∑É‡∂ú‡∂±‡∑ä‡∂±
const { cmd } = require('../command'); // ‡∂ã‡∂Ø‡∑è: '../command' ‡∑Ñ‡∑ù './command'
const { GoogleGenerativeAI } = require('@google/generative-ai');

// --- ‡∂î‡∂∫‡∑è ‡∂Ø‡∑ì‡∂¥‡∑î Gemini API Key ‡∂ë‡∂ö ‡∂∏‡∑ô‡∂≠‡∂± ‡∂ö‡∑ô‡∂Ω‡∑í‡∂±‡∑ä‡∂∏ ‡∂Ø‡∑è‡∂±‡∑Ä‡∑è ---
const GEMINI_API_KEY = "AIzaSyCItRq9qKhyDo5ZjO_ZBtRC1Z-Y3UD9Ma0";

let genAIInstance; // GoogleGenerativeAI instance ‡∂ë‡∂ö ‡∂≠‡∑í‡∂∫‡∑è‡∂ú‡∂±‡∑ä‡∂±

cmd({
    pattern: "ai", // Command ‡∂ë‡∂ö: .ai <‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫>
    react: "‚ú®",
    desc: "Gemini AI ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂± ‡∂Ö‡∑É‡∂±‡∑ä‡∂±.",
    category: "ai",
    filename: __filename
},
async (conn, mek, m, { from, q, reply, isOwner }) => {
    try {
        if (!q) {
            return reply("ü§ñ ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂∏‡∂ú‡∑ô‡∂±‡∑ä ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫‡∂ö‡∑ä ‡∂Ö‡∑Ñ‡∂±‡∑ä‡∂±.\n‡∂ã‡∂Ø‡∑è: `.ai ‡∂Ω‡∂Ç‡∂ö‡∑è‡∑Ä‡∑ö ‡∂Ö‡∂ú‡∂±‡∑î‡∑Ä‡∂ª ‡∂ö‡∑î‡∂∏‡∂ö‡∑ä‡∂Ø?`");
        }

        // API Key ‡∂ë‡∂ö ‡∂≠‡∑í‡∂∫‡∑ô‡∂±‡∑Ä‡∂Ø ‡∂ö‡∑í‡∂∫‡∂Ω ‡∂¥‡∑ú‡∂©‡∑í ‡∂†‡∑ô‡∂ö‡∑ä ‡∂ë‡∂ö‡∂ö‡∑ä (‡∑Ñ‡∑í‡∑É‡∑ä‡∂Ø ‡∂∂‡∂Ω‡∂±‡∑ä‡∂±)
        // ‡∂î‡∂∫‡∑è key ‡∂ë‡∂ö ‡∂ã‡∂© hardcode ‡∂ö‡∂ª‡∂Ω ‡∂≠‡∑í‡∂∫‡∑ô‡∂± ‡∂±‡∑í‡∑É‡∑è, ‡∂∏‡∑ö‡∂ö ‡∂ú‡∑ú‡∂©‡∂ö‡∑ä ‡∑Ä‡∑ô‡∂Ω‡∑è‡∑Ä‡∂ß true ‡∑Ä‡∑ô‡∂±‡∑ä‡∂± ‡∂ï‡∂±
        // ‡∑Ñ‡∑ê‡∂∂‡∑ê‡∂∫‡∑í, ‡∂ö‡∑Ä‡∑î‡∂ª‡∑î‡∑Ñ‡∂ª‡∑í ‡∂Ö‡∂≠‡∑í‡∂±‡∑ä key ‡∂ë‡∂ö delete ‡∂ö‡∂Ω‡∑ú‡∂≠‡∑ä ‡∂Ö‡∂Ω‡∑ä‡∂Ω‡∂ú‡∂±‡∑ä‡∂± ‡∂¥‡∑î‡∑Ö‡∑î‡∑Ä‡∂±‡∑ä
        if (!GEMINI_API_KEY) {
            console.error("Gemini API Key is missing in ai-gemini.js!");
            return reply("üö´ Gemini API Key ‡∂ë‡∂ö ‡∂∏‡∑ô‡∂∏ ‡∑Ü‡∂∫‡∑í‡∂Ω‡∑ä ‡∂ë‡∂ö ‡∂≠‡∑î‡∂Ω ‡∑É‡∂ö‡∑É‡∑è ‡∂±‡∑ê‡∂≠. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª bot ‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î ‡∂Ø‡∑ê‡∂±‡∑î‡∑Ä‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.");
        }

        // genAIInstance ‡∂ë‡∂ö initialize ‡∂ö‡∂ª‡∂Ω‡∑è ‡∂±‡∑ê‡∂≠‡∑ä‡∂±‡∂∏‡∑ä ‡∑Ä‡∑í‡∂≠‡∂ª‡∂ö‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
        if (!genAIInstance) {
            try {
                genAIInstance = new GoogleGenerativeAI(GEMINI_API_KEY);
            } catch (initError) {
                console.error("Error initializing GoogleGenerativeAI:", initError);
                // API key ‡∂ë‡∂ö ‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í ‡∂±‡∂∏‡∑ä (‡∂ã‡∂Ø‡∑è: ‡∂Ö‡∂ö‡∑î‡∂ª‡∂ö‡∑ä ‡∂ë‡∑Ñ‡∑ô‡∂∏ ‡∂Ö‡∂©‡∑î ‡∑Ä‡∑ê‡∂©‡∑í ‡∂ã‡∂±‡∑ú‡∂≠‡∑ä) ‡∂∏‡∑ô‡∂≠‡∂± error ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂ë‡∂±‡∑ä‡∂± ‡∂¥‡∑î‡∑Ö‡∑î‡∑Ä‡∂±‡∑ä
                if (initError.message && (initError.message.includes('API key not valid') || initError.message.includes('permission denied'))) {
                     return reply("üö´ API Key ‡∂ë‡∂ö ‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í‡∂∫‡∑í ‡∑Ñ‡∑ù ‡∂Ö‡∑Ä‡∑É‡∂ª ‡∂±‡∑ê‡∂≠ (‡∂Ü‡∂ª‡∂∏‡∑ä‡∂∑ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑í). ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª bot ‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î ‡∂Ø‡∑ê‡∂±‡∑î‡∑Ä‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.");
                }
                return reply("üò• ‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, Gemini AI ‡∑É‡∑ö‡∑Ä‡∑è‡∑Ä ‡∂Ü‡∂ª‡∂∏‡∑ä‡∂∑ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∑É‡∑í‡∂Ø‡∑î ‡∑Ä‡∑í‡∂∫.");
            }
        }
        
        const model = genAIInstance.getGenerativeModel({ model: "gemini-1.5-pro-latest" });

        // "Thinking" message ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂±‡∑ä‡∂±
        await reply("ü§î AI ‡∂ë‡∂ö ‡∑Ñ‡∑í‡∂≠‡∂± ‡∂ú‡∂∏‡∂±‡∑ä ‡∂â‡∂±‡∑ä‡∂±‡∑ö... ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂∏‡∂Ø‡∂ö‡∑ä ‡∂ª‡∑ê‡∂≥‡∑ì ‡∑É‡∑í‡∂ß‡∑í‡∂±‡∑ä‡∂±.");

        const result = await model.generateContent(q); // 'q' ‡∂ö‡∑í‡∂∫‡∂±‡∑ä‡∂±‡∑ô user ‡∂ú‡∑ô ‡∂¥‡∑ä‚Äç‡∂ª‡∑Å‡∑ä‡∂±‡∂∫
        const response = await result.response;
        const text = response.text();

        // AI ‡∂ë‡∂ö‡∑ö ‡∂ã‡∂≠‡∑ä‡∂≠‡∂ª‡∑ö ‡∂∫‡∑Ä‡∂±‡∑ä‡∂±
        return await reply(text);

    } catch (e) {
        console.error("Gemini AI Error in command execution:", e);
        let errorMessage = "üò• ‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, Gemini AI ‡∑Ä‡∑ô‡∂≠ ‡∑É‡∂∏‡∑ä‡∂∂‡∂±‡∑ä‡∂∞ ‡∑Ä‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∑É‡∑í‡∂Ø‡∑î ‡∑Ä‡∑í‡∂∫.";
        
        // Specific error messages
        if (e.message) {
            if (e.message.includes('API key not valid') || e.message.includes('permission denied')) {
                errorMessage = "üö´ API Key ‡∂ë‡∂ö ‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í‡∂∫‡∑í ‡∑Ñ‡∑ù ‡∂Ö‡∑Ä‡∑É‡∂ª ‡∂±‡∑ê‡∂≠. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª bot ‡∑Ñ‡∑í‡∂∏‡∑í‡∂ö‡∂ª‡∑î ‡∂Ø‡∑ê‡∂±‡∑î‡∑Ä‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.";
            } else if (e.message.includes('quota') || e.message.includes('rate limit')) {
                errorMessage = "‚åõ API ‡∑É‡∑ì‡∂∏‡∑è‡∑Ä ‡∂â‡∂ö‡∑ä‡∂∏‡∑Ä‡∑è ‡∂á‡∂≠. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂¥‡∑É‡∑î‡∑Ä ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.";
            } else if (e.response && e.response.candidates && e.response.candidates[0] && e.response.candidates[0].finishReason === 'SAFETY') {
                errorMessage = "‚ùå ‡∂î‡∂∂‡∂ú‡∑ö ‡∂â‡∂Ω‡∑ä‡∂Ω‡∑ì‡∂∏ ‡∂Ü‡∂ª‡∂ö‡∑ä‡∑Ç‡∂ö ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂¥‡∂≠‡∑ä‡∂≠‡∑í ‡∑Ñ‡∑ö‡∂≠‡∑î‡∑Ä‡∑ô‡∂±‡∑ä ‡∂¥‡∑ä‚Äç‡∂ª‡∂≠‡∑í‡∂ö‡∑ä‡∑Ç‡∑ö‡∂¥ ‡∑Ä‡∑í‡∂∫.";
            } else if (e.message.includes("User location is not supported")) {
                errorMessage = "üìç ‡∑É‡∂∏‡∑è‡∑Ä‡∂±‡∑ä‡∂±, ‡∂î‡∂∂‡∂ú‡∑ö ‡∂ö‡∂Ω‡∑è‡∂¥‡∂∫ ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂∏‡∑ô‡∂∏ ‡∑É‡∑ö‡∑Ä‡∑è‡∑Ä ‡∂Ω‡∂∂‡∑è ‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö (User location not supported).";
            }
            // You can add more specific checks if needed
        }
        
        // Owner ‡∂ß ‡∑Ä‡∑í‡∂≠‡∂ª‡∂ö‡∑ä ‡∑Ä‡∑ê‡∂©‡∑í ‡∑Ä‡∑í‡∑É‡∑ä‡∂≠‡∂ª ‡∂∫‡∑Ä‡∂±‡∑ä‡∂± (debug ‡∂ö‡∂ª‡∂±‡∑ä‡∂± ‡∂Ω‡∑ö‡∑É‡∑í ‡∑Ä‡∑ô‡∂±‡∑ä‡∂±)
        if (isOwner && e.stack) {
            await reply(`*Owner Debug Info:*\nError: ${e.message}\n\n*Stack (first 500 chars):*\n${e.stack.substring(0, 500)}...`);
        }
        
        return reply(errorMessage);
    }
});