// plugins/yt.js

const yt = require('yt-search');
const ytdl = require('ytdl-core');
const ffmpeg = require('fluent-ffmpeg');
const ffmpegPath = require('@ffmpeg-installer/ffmpeg').path;
ffmpeg.setFfmpegPath(ffmpegPath); // FFmpeg path ‡∂ë‡∂ö ‡∑É‡∂ö‡∑É‡∂±‡∑ä‡∂±

const fs = require('fs');
const path = require('path');
const crypto = require('crypto'); // ‡∂Ö‡∑Ñ‡∂π‡∑î ‡∂ú‡∑ú‡∂±‡∑î ‡∂±‡∂∏‡∑ä ‡∑É‡∑ë‡∂Ø‡∑ì‡∂∏‡∂ß

// command.js ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä‡∑ô‡∂±‡∑ä cmd ‡∑Å‡∑ä‚Äç‡∂ª‡∑í‡∂≠‡∂∫ import ‡∂ö‡∂ª‡∂ú‡∂±‡∑ä‡∂±
const { cmd } = require('../command'); 

// ‡∂≠‡∑è‡∑Ä‡∂ö‡∑è‡∂Ω‡∑í‡∂ö ‡∂ú‡∑ú‡∂±‡∑î ‡∂ú‡∂∂‡∂©‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß temp ‡∑Ü‡∑ù‡∂Ω‡∑ä‡∂©‡∂ª‡∂∫ ‡∑É‡∑è‡∂Ø‡∂±‡∑ä‡∂± (exist ‡∂±‡∑ê‡∂≠‡∑ä‡∂±‡∂∏‡∑ä)
const tempDir = path.join(__dirname, '..', 'temp');
if (!fs.existsSync(tempDir)) {
    fs.mkdirSync(tempDir, { recursive: true });
}

// --- SONG COMMAND (/song) ---
cmd({
    pattern: 'song',
    desc: 'YouTube ‡∂ú‡∑ì‡∂≠ ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂± (MP3).',
    usage: '<search query>',
    category: 'downloads',
    filename: __filename,
    react: 'üé∂'
}, async (conn, mek, m, { q, reply }) => {
    if (!q) {
        return reply("‡∂î‡∂∂‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑É‡∑ô‡∑Ä‡∑ì‡∂∏‡∂ß ‡∂±‡∂∏‡∂ö‡∑ä ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.\n‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∂∫: `/song <song name>`\n‡∂ã‡∂Ø‡∑è: `/song Faded Alan Walker`");
    }

    await reply("‡∑É‡∑ú‡∂∫‡∂∏‡∑í‡∂±‡∑ä ‡∑É‡∑í‡∂ß‡∑ì... ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂ª‡∑ê‡∂≥‡∑ì ‡∑É‡∑í‡∂ß‡∑í‡∂±‡∑ä‡∂±.");

    let tempFilePath = ''; // ‡∂≠‡∑è‡∑Ä‡∂ö‡∑è‡∂Ω‡∑í‡∂ö ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä‡∑ö path ‡∂ë‡∂ö ‡∂ú‡∂∂‡∂©‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß

    try {
        const videos = await yt.search(q);
        if (!videos.videos.length) {
            return reply("‡∂∏‡∂ß ‡∂ö‡∑í‡∑É‡∑í‡∂Ø‡∑î ‡∂ú‡∑ì‡∂≠‡∂∫‡∂ö‡∑ä ‡∑É‡∑ú‡∂∫‡∑è‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ä‡∑í‡∂∫. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä ‡∂±‡∂∏‡∂ö‡∑ä ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.");
        }

        const video = videos.videos[0];
        await reply(`'${video.title}' ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂∏‡∑í‡∂±‡∑ä ‡∑É‡∑í‡∂ß‡∑ì... (‡∂∏‡∑ô‡∂∫‡∂ß ‡∂ß‡∑í‡∂ö ‡∑Ä‡∑ö‡∂Ω‡∑è‡∑Ä‡∂ö‡∑ä ‡∂ú‡∂≠ ‡∑Ä‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö)`);

        // ‡∂≠‡∑è‡∑Ä‡∂ö‡∑è‡∂Ω‡∑í‡∂ö MP3 ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä‡∂ö‡∑ä ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂Ö‡∑Ñ‡∂π‡∑î ‡∂±‡∂∏‡∂ö‡∑ä ‡∑É‡∑è‡∂Ø‡∂±‡∑ä‡∂±
        const randomName = crypto.randomBytes(8).toString('hex');
        tempFilePath = path.join(tempDir, `${randomName}.mp3`);

        // ytdl-core ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∂∫‡∑ô‡∂±‡∑ä audio stream ‡∂ë‡∂ö ‡∂Ω‡∂∂‡∑è‡∂ú‡∑ô‡∂± FFmpeg ‡∂∏‡∂ú‡∑í‡∂±‡∑ä MP3 ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂ª‡∑í‡∑Ä‡∂ª‡∑ä‡∂≠‡∂±‡∂∫ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
        const audioStream = ytdl(video.url, { filter: 'audioonly', quality: 'highestaudio' });

        await new Promise((resolve, reject) => {
            ffmpeg(audioStream)
                .audioBitrate(128) // 128 kbps bitrate
                .save(tempFilePath)
                .on('end', resolve)
                .on('error', reject);
        });

        // ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä ‡∂∫‡∑Ä‡∂±‡∑ä‡∂± (Baileys' conn.sendMessage ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∂∫‡∑ô‡∂±‡∑ä)
        // Note: conn.sendFileUrl expects a URL, so we use conn.sendMessage directly for local files.
        await conn.sendMessage(m.chat, { 
            audio: fs.readFileSync(tempFilePath), // ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä buffer ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É ‡∂ö‡∑í‡∂∫‡∑Ä‡∂±‡∑ä‡∂±
            mimetype: 'audio/mpeg', // MP3 mimetype
            fileName: `${video.title}.mp3`,
            ptt: false // Voice note ‡∂±‡∑ú‡∑Ä‡∑ì‡∂∏‡∂ß (optional)
        }, { quoted: m });

        await reply(`‡∂∏‡∑ô‡∂±‡∑ä‡∂± ‡∂î‡∂∂‡∑ö ‡∂ú‡∑ì‡∂≠‡∂∫: *${video.title}*`);

    } catch (error) {
        console.error("YouTube Song Download Error (YTDL):", error);
        if (error.message.includes("403") || error.message.includes("age-restricted")) {
            await reply("‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∑É‡∑í‡∂Ø‡∑î‡∑Ä‡∑í‡∂∫. ‡∑É‡∂∏‡∑Ñ‡∂ª‡∑Ä‡∑í‡∂ß ‡∂∏‡∑ô‡∂∏ ‡∂ú‡∑ì‡∂≠‡∂∫ ‡∑Ä‡∂∫‡∑É ‡∑É‡∑ì‡∂∏‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ù ‡∂∑‡∑ñ‡∂ú‡∑ù‡∂Ω‡∑ì‡∂∫ ‡∑É‡∑ì‡∂∏‡∑è ‡∑É‡∑Ñ‡∑í‡∂≠ ‡∂ë‡∂ö‡∂ö‡∑ä ‡∑Ä‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö.");
        } else {
            await reply("‡∂ú‡∑ì‡∂≠‡∂∫ ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∑É‡∑í‡∂Ø‡∑î‡∑Ä‡∑í‡∂∫. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.");
        }
    } finally {
        // ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∂Ö‡∑Ä‡∑É‡∂±‡∑ä ‡∑Ä‡∑ñ ‡∂¥‡∑É‡∑î ‡∑Ñ‡∑ù ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∑É‡∑í‡∂Ø‡∑î‡∑Ä‡∑ñ ‡∂¥‡∑É‡∑î ‡∂≠‡∑è‡∑Ä‡∂ö‡∑è‡∂Ω‡∑í‡∂ö ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä ‡∂∏‡∂ö‡∑è ‡∂Ø‡∂∏‡∂±‡∑ä‡∂±
        if (fs.existsSync(tempFilePath)) {
            fs.unlinkSync(tempFilePath);
        }
    }
});

// --- VIDEO COMMAND (/video) ---
cmd({
    pattern: 'video',
    desc: 'YouTube ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂±‡∑ä‡∂± (MP4).',
    usage: '<search query>',
    category: 'downloads',
    filename: __filename,
    react: 'üé¨'
}, async (conn, mek, m, { q, reply }) => {
    if (!q) {
        return reply("‡∂î‡∂∂‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä ‡∑É‡∑ô‡∑Ä‡∑ì‡∂∏‡∂ß ‡∂±‡∂∏‡∂ö‡∑ä ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.\n‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∂∫: `/video <video name>`\n‡∂ã‡∂Ø‡∑è: `/video How to Train Your Dragon trailer`");
    }

    await reply("‡∑É‡∑ú‡∂∫‡∂∏‡∑í‡∂±‡∑ä ‡∑É‡∑í‡∂ß‡∑ì... ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂ª‡∑ê‡∂≥‡∑ì ‡∑É‡∑í‡∂ß‡∑í‡∂±‡∑ä‡∂±.");

    let tempFilePath = ''; // ‡∂≠‡∑è‡∑Ä‡∂ö‡∑è‡∂Ω‡∑í‡∂ö ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä‡∑ö path ‡∂ë‡∂ö ‡∂ú‡∂∂‡∂©‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∂ß

    try {
        const videos = await yt.search(q);
        if (!videos.videos.length) {
            return reply("‡∂∏‡∂ß ‡∂ö‡∑í‡∑É‡∑í‡∂Ø‡∑î ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä‡∂ö‡∑ä ‡∑É‡∑ú‡∂∫‡∑è‡∂ú‡∂≠ ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ä‡∑í‡∂∫. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä ‡∂±‡∂∏‡∂ö‡∑ä ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.");
        }

        const video = videos.videos[0];
        await reply(`'${video.title}' ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∂ª‡∂∏‡∑í‡∂±‡∑ä ‡∑É‡∑í‡∂ß‡∑ì... (‡∂∏‡∑ô‡∂∫‡∂ß ‡∂ß‡∑í‡∂ö ‡∑Ä‡∑ö‡∂Ω‡∑è‡∑Ä‡∂ö‡∑ä ‡∂ú‡∂≠ ‡∑Ä‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö)`);

        // ‡∂≠‡∑è‡∑Ä‡∂ö‡∑è‡∂Ω‡∑í‡∂ö MP4 ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä‡∂ö‡∑ä ‡∑É‡∂≥‡∑Ñ‡∑è ‡∂Ö‡∑Ñ‡∂π‡∑î ‡∂±‡∂∏‡∂ö‡∑ä ‡∑É‡∑è‡∂Ø‡∂±‡∑ä‡∂±
        const randomName = crypto.randomBytes(8).toString('hex');
        tempFilePath = path.join(tempDir, `${randomName}.mp4`);

        // ytdl-core ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∂∫‡∑ô‡∂±‡∑ä ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù stream ‡∂ë‡∂ö ‡∂Ω‡∂∂‡∑è‡∂ú‡∑ô‡∂± ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É save ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
        // Highest quality MP4 format with both video and audio
        const videoStream = ytdl(video.url, { filter: format => format.container === 'mp4' && format.hasVideo && format.hasAudio, quality: 'highest' });
        
        await new Promise((resolve, reject) => {
            const fileStream = fs.createWriteStream(tempFilePath);
            videoStream.pipe(fileStream);
            fileStream.on('finish', resolve);
            fileStream.on('error', reject);
            videoStream.on('error', reject); // Catch stream errors
        });

        // ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä ‡∂∫‡∑Ä‡∂±‡∑ä‡∂± (Baileys' conn.sendMessage ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∂∫‡∑ô‡∂±‡∑ä)
        await conn.sendMessage(m.chat, { 
            video: fs.readFileSync(tempFilePath), // ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä buffer ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É ‡∂ö‡∑í‡∂∫‡∑Ä‡∂±‡∑ä‡∂±
            mimetype: 'video/mp4', // MP4 mimetype
            fileName: `${video.title}.mp4`,
            caption: `‡∂∏‡∑ô‡∂±‡∑ä‡∂± ‡∂î‡∂∂‡∑ö ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä: *${video.title}*`
        }, { quoted: m });

    } catch (error) {
        console.error("YouTube Video Download Error (YTDL):", error);
        if (error.message.includes("403") || error.message.includes("age-restricted")) {
            await reply("‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∑É‡∑í‡∂Ø‡∑î‡∑Ä‡∑í‡∂∫. ‡∑É‡∂∏‡∑Ñ‡∂ª‡∑Ä‡∑í‡∂ß ‡∂∏‡∑ô‡∂∏ ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä ‡∑Ä‡∂∫‡∑É ‡∑É‡∑ì‡∂∏‡∑è ‡∂ö‡∑Ö ‡∑Ñ‡∑ù ‡∂∑‡∑ñ‡∂ú‡∑ù‡∂Ω‡∑ì‡∂∫ ‡∑É‡∑ì‡∂∏‡∑è ‡∑É‡∑Ñ‡∑í‡∂≠ ‡∂ë‡∂ö‡∂ö‡∑ä ‡∑Ä‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö.");
        } else {
            await reply("‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù‡∑Ä ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏‡∑ö‡∂Ø‡∑ì ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∑É‡∑í‡∂Ø‡∑î‡∑Ä‡∑í‡∂∫. ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª ‡∂±‡∑ê‡∑Ä‡∂≠ ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.");
        }
    } finally {
        // ‡∂∂‡∑è‡∂ú‡∂≠ ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏ ‡∂Ö‡∑Ä‡∑É‡∂±‡∑ä ‡∑Ä‡∑ñ ‡∂¥‡∑É‡∑î ‡∑Ñ‡∑ù ‡∂Ø‡∑ù‡∑Ç‡∂∫‡∂ö‡∑ä ‡∑É‡∑í‡∂Ø‡∑î‡∑Ä‡∑ñ ‡∂¥‡∑É‡∑î ‡∂≠‡∑è‡∑Ä‡∂ö‡∑è‡∂Ω‡∑í‡∂ö ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä ‡∂∏‡∂ö‡∑è ‡∂Ø‡∂∏‡∂±‡∑ä‡∂±
        if (fs.existsSync(tempFilePath)) {
            fs.unlinkSync(tempFilePath);
        }
    }
});