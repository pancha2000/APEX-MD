

// plugins/youtube.js
// ‡∂∏‡∑ô‡∂∏ ‡∂∏‡∑ú‡∂©‡∑í‡∂∫‡∑î‡∂Ω‡∂∫ WhatsApp Bot ‡∑Ñ‡∑í YouTube Download Commands ‡∑Ñ‡∑ê‡∑É‡∑í‡∂ª‡∑Ä‡∑ì‡∂∏‡∂ß ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∑Ä‡∑ö.

const { cmd } = require("../command"); // <-- ‡∂∏‡∑ô‡∂Ω‡∑ô‡∑É cmd function ‡∂ë‡∂ö import ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
const yts = require('yt-search'); // yt-search npm package ‡∂ë‡∂ö ‡∑É‡∑ä‡∂Æ‡∑è‡∂¥‡∂±‡∂∫ ‡∂ö‡∂ª ‡∂á‡∂≠‡∑í ‡∂∂‡∑Ä‡∂ß ‡∑Ä‡∂ú ‡∂∂‡∂Ω‡∑è ‡∂ú‡∂±‡∑ä‡∂±.
const axios = require('axios'); // axios npm package ‡∂ë‡∂ö ‡∑É‡∑ä‡∂Æ‡∑è‡∂¥‡∂±‡∂∫ ‡∂ö‡∂ª ‡∂á‡∂≠‡∑í ‡∂∂‡∑Ä‡∂ß ‡∑Ä‡∂ú ‡∂∂‡∂Ω‡∑è ‡∂ú‡∂±‡∑ä‡∂±.

// ‡∂î‡∂∂‡∂ú‡∑ö Koyeb API URL ‡∂ë‡∂ö ‡∂∏‡∑ô‡∑Ñ‡∑í ‡∑É‡∂≥‡∑Ñ‡∂±‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
// config.js ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∂±‡∂∏‡∑ä, ‡∂¥‡∑Ñ‡∂≠ commented line ‡∂ë‡∂ö ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
const YOUTUBE_DOWNLOAD_API_URL = 'https://youtube-download-api-gold.vercel.app/'; //'https://electoral-glad-h79160251-fbc6ed34.koyeb.app';

// -----------------------------------------------------------------------------
// ‡∑Ä‡∑í‡∂ö‡∂Ω‡∑ä‡∂¥‡∂∫: API URL ‡∂ë‡∂ö config.js ‡∑Ä‡∑ô‡∂≠‡∑í‡∂±‡∑ä ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏ (‡∑Ä‡∂©‡∑è‡∂≠‡∑ä ‡∑Ñ‡∑ú‡∂≥ ‡∂¥‡∑î‡∂ª‡∑î‡∂Ø‡∑ä‡∂Ø‡∂ö‡∑ä)
// ‡∂î‡∂∂‡∂ú‡∑ö config.js ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä‡∑ö youtubeApiUrl: 'YOUR_API_URL' ‡∂Ω‡∑ô‡∑É define ‡∂ö‡∂ª ‡∂á‡∂≠‡∑ä‡∂±‡∂∏‡∑ä,
// ‡∂î‡∂∂‡∂ß ‡∂â‡∑Ñ‡∂≠ line ‡∂ë‡∂ö ‡∂∏‡∑ô‡∑É‡∑ö ‡∑Ä‡∑ô‡∂±‡∑É‡∑ä ‡∂ö‡∑Ö ‡∑Ñ‡∑ê‡∂ö:
// const { youtubeApiUrl } = require('../config');
// const YOUTUBE_DOWNLOAD_API_URL = youtubeApiUrl || 'https://electoral-glad-h79160251-fbc6ed34.koyeb.app';
// -----------------------------------------------------------------------------

// ----------------------------------------------------------------------
// YouTube Download Commands ‡∂∏‡∑ô‡∑Ñ‡∑í‡∂Ø‡∑ì Define ‡∂ö‡∂ª‡∂±‡∑ä‡∂±
// ----------------------------------------------------------------------

// !audio command ‡∂ë‡∂ö define ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
cmd({
    pattern: "ytmp3", // command ‡∂ë‡∂ö‡∑ö pattern ‡∂ë‡∂ö. ‡∂î‡∂∂‡∂ú‡∑ö ‡∂∂‡∑ú‡∂ß‡∑ä‡∂ú‡∑ö prefix ‡∂ë‡∂ö (e.g., '!') ‡∂∏‡∑ô‡∑Ñ‡∑í ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∂±‡∑ê‡∑Ñ‡∑ê.
    cmdname: "audio",
    react: "üéµ", // ‡∂î‡∂∂‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∂±‡∂∏‡∑ä reaction ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∂∏‡∂±‡∑ä‡∂±
    desc: "Download YouTube Audio.",
    category: "download", // ‡∂î‡∂∂‡∂ß ‡∂ö‡∑ê‡∂∏‡∂≠‡∑í category ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∂∏‡∂±‡∑ä‡∂±
    fromMe: false, // bot owner ‡∂ß ‡∂¥‡∂∏‡∂´‡∂ö‡∑ä‡∂Ø, ‡∂±‡∑ê‡∂≠‡∑í‡∂±‡∂∏‡∑ä ‡∑Ñ‡∑ê‡∂∏‡∑ù‡∂ß‡∂∏‡∂Ø
    filename: __filename // ‡∂∏‡∑ô‡∂∏ ‡∂ú‡∑ú‡∂±‡∑î‡∑Ä‡∑ô‡∑Ñ‡∑í ‡∂±‡∂∏ (debugging ‡∑É‡∂≥‡∑Ñ‡∑è)
}, async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, reply }) => {
    // command logic ‡∂ë‡∂ö ‡∂∏‡∑ô‡∑Ñ‡∑í‡∂Ø‡∑ì ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∑Ä‡∑ö.
    // 'audio' download ‡∑É‡∂≥‡∑Ñ‡∑è common logic ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É youtubeDownloadHandler ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
    await youtubeDownloadHandler(conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, reply }, 'audio');
});

// !video command ‡∂ë‡∂ö define ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
cmd({
    pattern: "ytmp4",
    cmdname: "video",
    react: "üé•", // ‡∂î‡∂∂‡∂ß ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∂±‡∂∏‡∑ä reaction ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∂∏‡∂±‡∑ä‡∂±
    desc: "Download YouTube Video.",
    category: "download",
    fromMe: false,
    filename: __filename
}, async (conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, reply }) => {
    // command logic ‡∂ë‡∂ö ‡∂∏‡∑ô‡∑Ñ‡∑í‡∂Ø‡∑ì ‡∂ö‡∑ä‚Äç‡∂ª‡∑í‡∂∫‡∑è‡∂≠‡∑ä‡∂∏‡∂ö ‡∑Ä‡∑ö.
    // 'video' download ‡∑É‡∂≥‡∑Ñ‡∑è common logic ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É youtubeDownloadHandler ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
    await youtubeDownloadHandler(conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, reply }, 'video');
});


// ----------------------------------------------------------------------
// Common YouTube Download Logic Function ‡∂ë‡∂ö
// ----------------------------------------------------------------------

async function youtubeDownloadHandler(conn, mek, m, { from, quoted, body, isCmd, command, args, q, isGroup, sender, reply }, type) {
    // type parameter ‡∂ë‡∂ö 'audio' ‡∑Ñ‡∑ù 'video' ‡∑Ä‡∑í‡∂∫ ‡∂∫‡∑î‡∂≠‡∑î‡∂∫.

    if (!q) { // q (query) ‡∂ë‡∂ö ‡∑Ñ‡∑í‡∑É‡∑ä ‡∂±‡∂∏‡∑ä
        return reply("Provide a name or a YouTube link. üé•‚ù§Ô∏è");
    }

    let youtubeUrl;
    let videoInfo; // YouTube search result information

    // q ‡∂ë‡∂ö YouTube URL ‡∂ë‡∂ö‡∂ö‡∑ä‡∂Ø‡∑ê‡∂∫‡∑í ‡∂¥‡∂ª‡∑ì‡∂ö‡∑ä‡∑Ç‡∑è ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏
    try {
        const urlObj = new URL(q);
        if (urlObj.hostname.includes('youtube.com') || urlObj.hostname.includes('youtu.be')) {
            youtubeUrl = q; // q ‡∂ë‡∂ö YouTube URL ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂±‡∂∏‡∑ä, ‡∂ë‡∂∫‡∂∏ ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
        } else {
            // q ‡∂ë‡∂ö URL ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂±‡∑ú‡∑Ä‡∑ö ‡∂±‡∂∏‡∑ä, search ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
            const search = await yts(q);
            videoInfo = search.videos[0]; // ‡∂¥‡∑Ö‡∂∏‡∑î ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù result ‡∂ë‡∂ö ‡∂ú‡∂±‡∑ä‡∂±
            if (!videoInfo) return reply("No video results found for your query.");
            youtubeUrl = videoInfo.url;
        }
    } catch (e) {
        // URL validation fail ‡∑Ä‡∑î‡∑Ä‡∑Ñ‡∑ú‡∂≠‡∑ä, ‡∂ë‡∂∫ query ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É ‡∑É‡∂Ω‡∂ö‡∑è search ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
        const search = await yts(q);
        videoInfo = search.videos[0];
        if (!videoInfo) return reply("No video results found for your query.");
        youtubeUrl = videoInfo.url;
    }

    // ‡∑Ä‡∑ì‡∂©‡∑í‡∂∫‡∑ù ‡∂≠‡∑ú‡∂ª‡∂≠‡∑î‡∂ª‡∑î ‡∑É‡∂∏‡∂ú thumbnail ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂±‡∑ä‡∂± (‡∂î‡∂∂‡∑ö ‡∂ö‡∂Ω‡∑í‡∂±‡∑ä 'video' command ‡∂ë‡∂ö‡∑ö ‡∑Ä‡∂ú‡∑ö)
    // ‡∂∏‡∑ö ‡∂ö‡∑ú‡∂ß‡∑É ‡∂ë‡∂Ω‡∑ô‡∑É‡∂∏ ‡∂≠‡∂∂‡∂∏‡∑î, ‡∂ë‡∂∫ user ‡∂ß ‡∑Ñ‡∑ú‡∂≥ ‡∂Ö‡∂≠‡∑ä‡∂Ø‡∑ê‡∂ö‡∑ì‡∂∏‡∂ö‡∑ä ‡∂Ω‡∂∂‡∑è ‡∂Ø‡∑ô‡∂±‡∑Ä‡∑è.
    if (videoInfo && videoInfo.thumbnail) {
        let desc = `üé¨ *YouTube ${type.toUpperCase()} Downloader* üé¨\n\n`;
        desc += `‚ú® *Title* : ${videoInfo.title}\n`;
        desc += `‚è±Ô∏è *Duration* : ${videoInfo.timestamp}\n`;
        desc += `üëÅÔ∏è *Views* : ${videoInfo.views}\n`;
        desc += `üóìÔ∏è *Uploaded* : ${videoInfo.ago}\n`;
        desc += `üì∫ *Channel* : ${videoInfo.author.name}\n`;
        desc += `üîó *Link* : ${videoInfo.url}\n\n`;
        desc += `Powered by APEX-MD\n\n`;
        desc += '.ytmp command ‡∂ë‡∂ö ‡∑Ä‡∑ê‡∂© ‡∂±‡∑ê‡∂≠‡∑í‡∂±‡∂∏‡∑ä ‡∂Ö‡∂±‡∑ô‡∂ö‡∑ä download command ‡∂ã‡∂≠‡∑ä‡∑É‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±' // ‡∂î‡∂∂‡∂ß ‡∂ö‡∑ê‡∂∏‡∂≠‡∑í ‡∂±‡∂∏‡∂ö‡∑ä ‡∂Ø‡∂∏‡∂±‡∑ä‡∂±

        await conn.sendMessage(
            from,
            { image: { url: videoInfo.thumbnail }, caption: desc },
            { quoted: mek }
        );
    } else {
        await reply(`üéµ Fetching ${type} download link for: ${youtubeUrl}`);
    }

    try {
        const endpoint = type === 'audio' ? '/audio' : '/video';
        const apiUrl = `${YOUTUBE_DOWNLOAD_API_URL}${endpoint}?url=${encodeURIComponent(youtubeUrl)}`;

        console.log(`Calling YouTube Download API: ${apiUrl}`); // Debugging ‡∑É‡∂≥‡∑Ñ‡∑è

        const response = await axios.get(apiUrl);

        if (response.status === 200 && (response.data.audio_url || response.data.video_url)) {
            const downloadUrl = response.data.audio_url || response.data.video_url;

            // ***** ‡∂∏‡∑ô‡∂≠‡∂±‡∑í‡∂±‡∑ä ‡∂¥‡∑Ñ‡∂Ω‡∂ß ‡∂≠‡∂∏‡∂∫‡∑í ‡∂¥‡∑ä‚Äç‡∂ª‡∂∞‡∑è‡∂± ‡∑Ä‡∑ô‡∂±‡∑É ‡∑É‡∑í‡∂Ø‡∑î ‡∂ö‡∂ª‡∂±‡∑ä‡∂±‡∑ö *****
            // API ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä ‡∂Ω‡∑ê‡∂∂‡∑î‡∂´‡∑î download URL ‡∂ë‡∂ö‡∑ô‡∂±‡∑ä media file ‡∂ë‡∂ö download ‡∂ö‡∂ª‡∂ú‡∑ê‡∂±‡∑ì‡∂∏
            await reply(`‚è≥ Please wait while I download and send your ${type}...\n_This may take some time depending on the file size._`);

            try {
                const mediaResponse = await axios.get(downloadUrl, { responseType: 'arraybuffer' }); // media data ‡∂ë‡∂ö binary buffer ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É ‡∂Ω‡∂∂‡∑è ‡∂ú‡∑ê‡∂±‡∑ì‡∂∏
                const mediaBuffer = Buffer.from(mediaResponse.data); // Buffer ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂∂‡∑Ä‡∂ß ‡∂¥‡∂≠‡∑ä ‡∂ö‡∑í‡∂ª‡∑ì‡∂∏

                let messageOptions = { quoted: mek }; // WhatsApp message options

                if (type === 'audio') {
                    // Audio ‡∂Ω‡∑ô‡∑É ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏
                    // "mimetype" ‡∂ë‡∂ö ‡∂±‡∑í‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í‡∂Ø‡∑ê‡∂∫‡∑í ‡∂≠‡∑Ñ‡∑Ä‡∑î‡∂ª‡∑î ‡∂ö‡∂ª‡∂ú‡∂±‡∑ä‡∂±. mp3 ‡∑É‡∂≥‡∑Ñ‡∑è 'audio/mpeg' ‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫‡∂∫‡∑ô‡∂±‡∑ä ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∑Ä‡∑ö.
                    messageOptions.audio = mediaBuffer;
                    messageOptions.mimetype = 'audio/mpeg';
                    messageOptions.fileName = `${videoInfo ? videoInfo.title : 'audio'}.mp3`; // File name ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±
                    // `ptt: true` ‡∂∫‡∑ô‡∂Ø‡∑î‡∑Ä‡∑ú‡∂≠‡∑ä voice note ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ω‡∑ô‡∑É ‡∂∫‡∂∫‡∑í. ‡∂Ö‡∑Ä‡∑Å‡∑ä‚Äç‡∂∫ ‡∂±‡∂∏‡∑ä ‡∂â‡∑Ä‡∂≠‡∑ä ‡∂ö‡∂ª‡∂±‡∑ä‡∂±.
                    messageOptions.ptt = true; // Voice note ‡∂Ω‡∑ô‡∑É ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏
                } else if (type === 'video') {
                    // Video ‡∂Ω‡∑ô‡∑É ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏
                    // "mimetype" ‡∂ë‡∂ö ‡∂±‡∑í‡∑Ä‡∑ê‡∂ª‡∂Ø‡∑í‡∂Ø‡∑ê‡∂∫‡∑í ‡∂≠‡∑Ñ‡∑Ä‡∑î‡∂ª‡∑î ‡∂ö‡∂ª‡∂ú‡∂±‡∑ä‡∂±. mp4 ‡∑É‡∂≥‡∑Ñ‡∑è 'video/mp4' ‡∑É‡∑è‡∂∏‡∑è‡∂±‡∑ä‚Äç‡∂∫‡∂∫‡∑ô‡∂±‡∑ä ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∑è ‡∑Ä‡∑ö.
                    messageOptions.video = mediaBuffer;
                    messageOptions.mimetype = 'video/mp4';
                    messageOptions.caption = videoInfo ? `üé• ${videoInfo.title}` : `üé• YouTube Video`; // Video ‡∂ë‡∂ö‡∂ß caption ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±
                    messageOptions.fileName = `${videoInfo ? videoInfo.title : 'video'}.mp4`; // File name ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂Ø‡∑ô‡∂±‡∑ä‡∂±
                }
                
                // WhatsApp ‡∑É‡∑ì‡∂∏‡∑è‡∑Ä‡∂±‡∑ä ‡∂±‡∑í‡∑É‡∑è ‡∑Ä‡∑í‡∑Å‡∑è‡∂Ω files ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏‡∂ß ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∑Ä‡∑î‡∑Ä‡∑Ñ‡∑ú‡∂≠‡∑ä, link ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂∫‡∑Ä‡∂±‡∑ä‡∂±.
                // ‡∂∏‡∑ö ‡∂ö‡∑ú‡∂ß‡∑É ‡∂ã‡∂≠‡∑ä‡∑É‡∑è‡∑Ñ ‡∂ö‡∂ª‡∂±‡∑ä‡∂±, ‡∑É‡∑è‡∂ª‡∑ä‡∂Æ‡∂ö ‡∂±‡∑ú‡∑Ä‡∑î‡∑Ä‡∑Ñ‡∑ú‡∂≠‡∑ä, ‡∂¥‡∑Ñ‡∂≠ link ‡∂ë‡∂ö ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏‡∂ß ‡∑Ä‡∑ê‡∂ß‡∑ö.
                await conn.sendMessage(from, messageOptions);
                await reply(`‚úÖ Your ${type} has been sent successfully!`);

            } catch (downloadError) {
                console.error(`Error downloading media from ${downloadUrl} or sending to WhatsApp:`, downloadError.message);
                // WhatsApp file size limit ‡∂ë‡∂ö‡∂ö‡∑ä ‡∂±‡∑í‡∑É‡∑è ‡∑Ñ‡∑ù ‡∑Ä‡∑ô‡∂±‡∂≠‡∑ä ‡∂ú‡∑ê‡∂ß‡∂Ω‡∑î‡∑Ä‡∂ö‡∑ä ‡∂±‡∑í‡∑É‡∑è download ‡∂ö‡∂ª ‡∂∫‡∑ê‡∑Ä‡∑ì‡∂∏‡∂ß ‡∂±‡∑ú‡∑Ñ‡∑ê‡∂ö‡∑í ‡∂±‡∂∏‡∑ä, link ‡∂ë‡∂ö ‡∂∫‡∑Ä‡∂±‡∑ä‡∂±.
                await reply(`‚ùå An error occurred while sending the ${type} directly (It might be too large for WhatsApp or a temporary issue).\nHere is the direct download link instead: \n${downloadUrl}`);
            }
            // ***** ‡∂∏‡∑ô‡∂≠‡∑ê‡∂±‡∑í‡∂±‡∑ä ‡∂â‡∑Ñ‡∂Ω‡∂ß ‡∂≠‡∂∏‡∂∫‡∑í ‡∂¥‡∑ä‚Äç‡∂ª‡∂∞‡∑è‡∂± ‡∑Ä‡∑ô‡∂±‡∑É *****

        } else {
            await reply(`‚ùå Could not get ${type} link. API responded with an unexpected error.`);
            console.error('API Error Response:', response.data);
        }
    } catch (error) {
        console.error('Error calling YouTube Download API:', error.message);
        const errorDetails = error.response && error.response.data && error.response.data.error
                           ? `Details: ${error.response.data.error}`
                           : `Details: ${error.message}`;
        await reply(`‚ùå An error occurred while fetching the download link. Please try again later. \n${errorDetails}`);
    }
}